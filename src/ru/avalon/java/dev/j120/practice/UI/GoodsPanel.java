/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ru.avalon.java.dev.j120.practice.UI;

import java.math.BigDecimal;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.table.TableModel;
import ru.avalon.java.dev.j120.practice.UI.tablemodels.GoodsTableModel;
import ru.avalon.java.dev.j120.practice.controller.Mediator;
import ru.avalon.java.dev.j120.practice.entity.Good;
import ru.avalon.java.dev.j120.practice.entity.Order;
import ru.avalon.java.dev.j120.practice.entity.OrderedItem;
import ru.avalon.java.dev.j120.practice.utils.MyEventListener;
import ru.avalon.java.dev.j120.practice.utils.StateEnum;

/**
 *
 * @author Hino
 */
public class GoodsPanel extends javax.swing.JPanel {    
    private final Mediator mediator;
    private TableModel gtm;
    private JPanel opParent;
    private final StateEnum state; //NEW == панель номенклятуры; EXIST == панель добавления товара в заказ
    private Order order;
    
    /**
     * Открывает панель номенклатуры
     * @param mediator
     * @param state
     */
    public GoodsPanel(Mediator mediator, StateEnum state) {
        if (!state.equals(StateEnum.NEW)){
            //TODO ERROR
        }
        initComponents();
        this.mediator = mediator;
        
        gtm = new GoodsTableModel(mediator);
        mediator.addListener((MyEventListener) gtm);
        goodsTable.setModel(gtm);
        this.state = state;
        ItemAddedLabel.setVisible(false);
        addToOrderButton.setVisible(false);
        closeButton.setVisible(false);
    }
    
    /**
     * Открывает панель добавления товара
     * @param mediator
     * @param opParent
     * @param order
     * @param state
     */
    public GoodsPanel(Mediator mediator, JPanel opParent, Order order, StateEnum state) {
        if (!state.equals(StateEnum.EXIST)){
            //TODO ERROR      
        }
        initComponents();
        this.mediator = mediator;
        
        this.opParent = opParent;
        this.order = order;
        this.opParent = opParent;
        gtm = new GoodsTableModel(mediator);
        mediator.addListener((MyEventListener) gtm);
        goodsTable.setModel(gtm);
        this.state = state;
        ItemAddedLabel.setVisible(false);
        openNewGoodsCardButton.setVisible(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        openNewGoodsCardButton = new javax.swing.JButton();
        addToOrderButton = new javax.swing.JButton();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        closeButton = new javax.swing.JButton();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        ItemAddedLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        goodsTable = new javax.swing.JTable();

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        openNewGoodsCardButton.setText("Добавить номенклатуру");
        openNewGoodsCardButton.setFocusable(false);
        openNewGoodsCardButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        openNewGoodsCardButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        openNewGoodsCardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openNewGoodsCardButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(openNewGoodsCardButton);

        addToOrderButton.setText("Добавить в заказ");
        addToOrderButton.setFocusable(false);
        addToOrderButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addToOrderButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addToOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToOrderButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(addToOrderButton);
        jToolBar1.add(filler2);

        closeButton.setText("Закрыть");
        closeButton.setFocusable(false);
        closeButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        closeButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(closeButton);
        jToolBar1.add(filler3);

        ItemAddedLabel.setText("Позиция добавлена");
        jToolBar1.add(ItemAddedLabel);

        goodsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        goodsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                goodsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(goodsTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 643, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void openNewGoodsCardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openNewGoodsCardButtonActionPerformed
        JTabbedPane maintab = (JTabbedPane) this.getParent();
        GoodsCardPanel goodsCard = new GoodsCardPanel(mediator, this);
        maintab.addTab("Новая номенклатурная единица", goodsCard);
        maintab.setSelectedIndex(maintab.getTabCount() -1);
    }//GEN-LAST:event_openNewGoodsCardButtonActionPerformed

    private void goodsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_goodsTableMouseClicked
        if (evt.getButton() == 1 && evt.getClickCount() == 2){
            
            Good good = getRowGood();
            //NEW == панель номенклатуры; EXIST == панель добавления товара в заказ
            if (state.equals(StateEnum.NEW)){
                openGoodCardPanel(good);
            }
            if (state.equals(StateEnum.EXIST)){
                addOrderedItem(good);
            }
        }
    }//GEN-LAST:event_goodsTableMouseClicked
    
    private Good getRowGood(){ 
        //Получение данных о товаре из таблицы
        Long article = (Long) gtm.getValueAt(goodsTable.getSelectedRow(), 0);        
        return mediator.getGood(article);
    }      
    
    private void addOrderedItem(Good good){ 
        order.add(new OrderedItem(good,good.getPrice(),1));
        ItemAddedLabel.setVisible(true); 
        ItemAddedLabel.setText("Артикул №" + good.getArticle() +" добавлен к заказу");
    }
    
    private void openGoodCardPanel(Good good){        
        //Инициализация панели товара        
        JTabbedPane maintab = (JTabbedPane) this.getParent();
        GoodsCardPanel goodsCard = new GoodsCardPanel(mediator, this, good);
        maintab.addTab("Номенклатурная единица "+ good.getArticle(), goodsCard);        
        maintab.setSelectedIndex(maintab.getTabCount() -1);
    }
    
    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        JTabbedPane maintab = (JTabbedPane) this.getParent();        
        maintab.setSelectedComponent(opParent);        
        MyEventListener listener = (MyEventListener) opParent;
        listener.update("unlock");
        maintab.remove(this);
        mediator.removeListener((MyEventListener) gtm);
    }//GEN-LAST:event_closeButtonActionPerformed

    private void addToOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToOrderButtonActionPerformed
        if (state.equals(StateEnum.EXIST)){
            addOrderedItem(getRowGood());
        }
    }//GEN-LAST:event_addToOrderButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ItemAddedLabel;
    private javax.swing.JButton addToOrderButton;
    private javax.swing.JButton closeButton;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.JTable goodsTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton openNewGoodsCardButton;
    // End of variables declaration//GEN-END:variables

    
}
